// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"backend-simple-pos/app"
	"backend-simple-pos/auth"
	"backend-simple-pos/handler"
	"backend-simple-pos/role"
	"backend-simple-pos/user"
	"github.com/google/wire"
)

// Injectors from injector.go:

func InitializeUserHandler() *handler.UserHandler {
	db := app.NewDB()
	userRepository := user.NewRepository(db)
	userService := user.NewService(userRepository)
	jwtService := auth.NewService()
	userHandler := handler.NewUserHandler(userService, jwtService)
	return userHandler
}

func InitializeRoleHandler() *handler.RoleHandler {
	db := app.NewDB()
	roleRepository := role.NewRepository(db)
	roleService := role.NewService(roleRepository)
	roleHandler := handler.NewRoleHandler(roleService)
	return roleHandler
}

// injector.go:

var userSer = wire.NewSet(user.NewRepository, wire.Bind(new(user.Repository), new(*user.UserRepository)))

var userServiceSet = wire.NewSet(user.NewService, wire.Bind(new(user.Service), new(*user.UserService)))

var authSet = wire.NewSet(auth.NewService, wire.Bind(new(auth.Service), new(*auth.JwtService)))

var roleRepositorySet = wire.NewSet(role.NewRepository, wire.Bind(new(role.Repository), new(*role.RoleRepository)))

var roleServiceSet = wire.NewSet(role.NewService, wire.Bind(new(role.Service), new(*role.RoleService)))
